(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{478:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"字体"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字体"}},[t._v("#")]),t._v(" 字体")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[t._v("过去的字体只能选用用户电脑上已安装的字体，因此可选择的字体一般是默认字体，极为有限。\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-family")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" arial"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" helvetica"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sans-serif"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 逗号分隔表示备用顺序。 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-family")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Genava"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("sans-serif"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-family")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Times New Roman'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 空格多个单词的字体要加引号 */")]),t._v("\n")])])]),s("h2",{attrs:{id:"web-font"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#web-font"}},[t._v("#")]),t._v(" web-font")]),t._v(" "),s("p",[t._v("开发人员可以为网页指定特殊的字体（比如将指定字体提前下载到站点中），无需考虑用户电脑上是否安装了此特殊字体。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("注意事项：\n免费或需要付费；\n页面加载时间（字体的显示还是需要资源）；\n不同浏览器、不同字体大小的显示效果都可能不同，所以选定字体前需要测试效果。比如，http://webfontspecimen.com\n\n国内阿里巴巴的web-font网站，http://iconfont.cn/webfont#!/webfont/index\n")])])]),s("h2",{attrs:{id:"图标字体"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#图标字体"}},[t._v("#")]),t._v(" 图标字体")]),t._v(" "),s("p",[t._v("指的是页面上的图标，可以像字体一样为他们设置样式，设置颜色等。优点是不论设置的大小，总会很清晰锐利，不需设计多套不同尺寸的图片。")]),t._v(" "),s("h3",{attrs:{id:"自托管"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自托管"}},[t._v("#")]),t._v(" 自托管")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[t._v("从网站上下载字体源文件，像图片一样放在服务器上，由自己部署。\n注意使用的时候，选择只需要的语言字体子集（比如只选择英文字体部分），以及只使用常规、粗体、斜体等必要字体可减少大小；\n然后在代码里进行设置。不同的网站会有不同的设置。\n\n"),s("span",{pre:!0,attrs:{class:"token atrule"}},[s("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@font-face")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 这里这么多代码都只是pt_sans字体的regular版本的设置。 */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-family")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pt_sansregular'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("src")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token url"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string url"}},[t._v("'PTS55F-webfont.eot'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("src")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token url"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string url"}},[t._v("'PTS55F-webfont.eot?#iefix'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'embedded-opentype'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n    \t "),s("span",{pre:!0,attrs:{class:"token url"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string url"}},[t._v("'PTS55F-webfont.woff'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'woff'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n    \t "),s("span",{pre:!0,attrs:{class:"token url"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string url"}},[t._v("'PTS55F-webfont.ttf'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'truetype'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 这里不同的文件是为不同浏览器及不同设备而准备的，比如eot、svg、woff这些格式。 */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-weight")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" normal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-style")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" normal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 这两个属性表明这个字体的粗细、是否斜体 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("一般也就是这里面font-family、font-weight、font-style，以及src的设置。\n常规、斜体、粗体三个字体都要来一遍这样的设置，且都有自己的字体文件。\n\n然后使用如下：\nbody")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-family")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pt_sansregular"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"web字体服务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#web字体服务"}},[t._v("#")]),t._v(" web字体服务")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[t._v("这种方式是指按月或按年支付使用字体的版权费用，而不是彻底买断字体。这些服务托管字体，为用户提供一小段代码放在其网页中。这段代码可能是JavaScript，也可能是CSS，这取决于服务自身。\n它包含了从远程服务器获取字体文件并将其显示在网站上这一过程所需的全部代码。\n这种方式相比自托管，更加简单操作，省去了创建修改"),s("span",{pre:!0,attrs:{class:"token atrule"}},[s("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@font-face")]),t._v("的操作，并且免费字体也很多，所以变得更加流行。\n比如下面这句，就引入了Lato字体的300粗细，和opensans的700粗细\n<link href="),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" http://fonts.googleapis.com/css?family=Lato:300|Open+Sans:700"')]),t._v(" rel="),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stylesheet"')]),t._v("/>\n使用的时候如下使用就可以了。\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-family")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Lato'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sans-serif"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-weight")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 300"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"font-weight"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#font-weight"}},[t._v("#")]),t._v(" font-weight")]),t._v(" "),s("p",[t._v("属性值既可以直接填写 100 至 900 这样的数字，也可以填写normal、bold这样的单词。normal= 400，bold= 700")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("问题：\n在Windows浏览器下，font-weight无论是设置300、400，还是500，文字的粗细都没有任何变化，只有到600的时候才会加粗一下，浏览器好像不支持这些数值。\n\n答案：\n实际上，所有这些数值关键字浏览器都是支持的，之所以没有看到任何粗细的变化，是因为使用的字体不支持。拿“微软雅黑”来举例，它只支持 400 和 700 这两种粗细，所以当你在代码里写成500的时候，也会被认为是400。\n\n各大平台的默认字体加粗效果：\nMac & iOS 平台的“苹方”字体：500 和600，加粗效果是不同的；>=600的加粗效果是相同的。\nWindows平台的“微软雅黑”字体：只有 >=600 才会加粗，而且加粗效果相同。\nAndroid平台的 Droid Sans 字体，只有 >=700才会加粗；而且加粗效果相同。\n")])])]),s("h2",{attrs:{id:"连续数字字母字符溢出换行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#连续数字字母字符溢出换行"}},[t._v("#")]),t._v(" 连续数字字母字符溢出换行")]),t._v(" "),s("p",[t._v("单独文本或者")]),s("p",[t._v("标签里的文本，有空格都会自动换行；除非是那种一次连续不断，很长的数字或者字母，（单独的英文逗号也不会换行）超过父容器的部分就无法显示。")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 强制不换行:*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("white-space")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("nowrap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 元素的文本显示在一行里 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 正常自动换行，但如果有长数字字母，就在前面找能换行的字符（如空格）或CJK(Chinese/Japanese/Korean)(中文/日文/韩文)之类的，就让前面这些换行点换行，不打长英文单词或字符的主意了，至于对不对齐，好不好看，则不关心，因此，很容易出现一片一片牛皮癣一样的空白的情况。 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".breakword")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("word-wrap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" break-word"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 谐音：wwbw，我五百万:*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 不管什么空格，中文，长数字，统统宽度到了就换行:*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".word-break")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("word-break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" break-all"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 谐音：wbba，我爸爸啊:*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 超出部分显示省略号 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".ellipsis")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("text-overflow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ellipsis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("overflow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hidden"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"其他常见的文本属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其他常见的文本属性"}},[t._v("#")]),t._v(" 其他常见的文本属性")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v("letter-spacing")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \t0.5em "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" 单个字母之间的间距\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("word-spacing")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \t\t1px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" 单词之间的间距\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 以上两个属性，同行高一样，会继承，且只继承计算后的实际数值，而不继承相对大小。 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("text-decoration")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \tnone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" 字体修饰：none去掉下划线、underline下划线、line-through中划线、overline上划线\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \t\t\t\tred"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" 字体颜色（在body中设置了颜色，除了<a>之外的其他元素都会继承颜色）\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("text-align")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \t\tcenter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" 在当前容器中的对齐方式。left、right、center、justify（两端对齐）\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("text-transform")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \tlowercase"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" 单词的大小写。uppercase（大写）、lowercase（小写）、capitalize（首字母大写）\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("text-indent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\t\t2em"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" 段落第一行的缩进。em根据字体大小计算，百分数根据父元素宽度计算。\n")])])]),s("h2",{attrs:{id:"嵌套列表的相对字体大小"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#嵌套列表的相对字体大小"}},[t._v("#")]),t._v(" 嵌套列表的相对字体大小")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("如果有ol li ol li这样的多层级嵌套列表，如果再使用像 ol li{font-size:0.75em;} 这样的样式规则，每一层列表项目的字体大小便是其父元素的75%，每多一级都会迅速让情况变得更糟糕。一种解决方案是添加li li{font-size:1em;}\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);