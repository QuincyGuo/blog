(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{474:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"选择器的使用思路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#选择器的使用思路"}},[t._v("#")]),t._v(" 选择器的使用思路")]),t._v(" "),s("p",[s("strong",[t._v("公共类")])]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("不要把每一处的所有样式都只用一个选择器写完；比如\n.classA")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    text\n    color\n    padding\n    ...\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("而是要多写独立、简单的样式选择器，然后让HTML标签多携带几个这样的样式，大家共同组成目标样式，比如\n.red-text")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("文本颜色"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".blue-backg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("背景颜色"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".padding-10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("内间距"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("少用ID")])]),t._v(" "),s("p",[t._v("CSS样式尽量用类选择器，id最好用在行为JS上。")]),t._v(" "),s("h2",{attrs:{id:"层叠性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#层叠性"}},[t._v("#")]),t._v(" 层叠性")]),t._v(" "),s("p",[t._v("当多个选择器，要为同一个元素，设置同一属性的时候，选择的顺序：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("选择器选择上了目标元素，数各自的权重，(id的数量，类/伪类的数量，标签/伪元素的数量），（如同比较数字大小一样，先比较百位的id数量，再比较十位的类数量，再比较个位的标签数量）。如果权重一样，谁在文件里位置靠后听谁的。")])]),t._v(" "),s("li",[s("p",[t._v("没有选择上，全都是通过继承影响的，谁的继承距离目标元素更近听谁的。如果继承的一样近，比较选择器权重，如果权重再一样重，谁写在后面听谁的。")])]),t._v(" "),s("li",[s("p",[t._v("以上顺序，低于行内样式，再低于!important。")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!--行内样式 --\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token special-attr"}},[s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("style")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),s("span",{pre:!0,attrs:{class:"token value css language-css"}},[s("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("red"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("text."),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!--!important --\x3e")]),t._v("\n.red-text {\n\tcolor:red !important;\n}\n")])])])])]),t._v(" "),s("p",[t._v("几个注意的点：")]),t._v(" "),s("ul",[s("li",[t._v("交集选择器div.class1在计算权重时，应该给类选择器和标签选择器都加1。")]),t._v(" "),s("li",[t._v("一个标签引用多个类选择器，比如<div class = “sp1 sp2”>，这个计算的顺序和在这一句里sp1，sp2谁在前后没有关系，只和CSS样式表里选择器引用sp1，sp2的权重计算有关。")]),t._v(" "),s("li",[t._v("后代选择器的只要符合后代关系原则就都会选上。")])]),t._v(" "),s("h2",{attrs:{id:"普通选择器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#普通选择器"}},[t._v("#")]),t._v(" 普通选择器")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 标签选择器 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("red"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 类选择器 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("red"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* ID选择器 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#id")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("red"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"复合选择器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#复合选择器"}},[t._v("#")]),t._v(" 复合选择器")]),t._v(" "),s("h3",{attrs:{id:"后代选择器-空格"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#后代选择器-空格"}},[t._v("#")]),t._v(" 后代选择器  空格")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".div p .class1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 每次并不一定会从根节点开始算，每次也并不一定都会完全按照节点树一层一层描述，可能中间会跳一两层。但只要符合这种后代关系的，都可以使用。 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),s("h3",{attrs:{id:"直接子元素选择器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#直接子元素选择器"}},[t._v("#")]),t._v(" 直接子元素选择器  >")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".div > p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 只选择第一层的子元素，也就是直接子元素。 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"交集选择器-紧挨"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#交集选择器-紧挨"}},[t._v("#")]),t._v(" 交集选择器 紧挨")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p.div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 一般是标签.类，但是.类.类也是可以的。 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"并集选择器-逗号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#并集选择器-逗号"}},[t._v("#")]),t._v(" 并集选择器 逗号")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p,.div,h1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 带有任意一个这几种属性的标签都会有该属性。 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"属性选择器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#属性选择器"}},[t._v("#")]),t._v(" 属性选择器  []")]),t._v(" "),s("p",[t._v("主要用于匹配标签的className。")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("input[type]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 存在type属性的input元素。*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v('input[type="text"]')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 存在type属性并且其值要求是text（不能有其他值并列）的input元素。*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v('a[class~="download"]')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* class属性值包含以空格分隔的多个值，其中一个要求是download的a元素。*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v('a[class|="download"]')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* class属性值只有一个，等于download或者以download开头的a元素。*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v('a[class*="download"]')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* class属性值包含download字符并且在任意位置的a元素。*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v('a[class^="download"]')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* class属性值包含download字符并且在开始位置的a元素。*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v('a[class$="download"]')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* class属性值包含download字符并且在结束位置的a元素。*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("        \n")])])]),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("input[type='email']:invalid")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("input[type='email']:valid")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" black"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 属性选择器配合属性值的场景，但使用场景有限，因为:后面的值无法自己指定，只能用预设的值。*/")]),t._v("\n")])])]),s("h2",{attrs:{id:"兄弟元素选择器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#兄弟元素选择器"}},[t._v("#")]),t._v(" 兄弟元素选择器")]),t._v(" "),s("h3",{attrs:{id:"first-child"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#first-child"}},[t._v("#")]),t._v(" first-child")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v("E")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("first-child \t匹配E元素的父元素的第一个子元素E。\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("E")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("last-child \t匹配E元素的父元素的最后一个子元素E。\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("E")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("nth-child")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t匹配E元素的父元素的第n个子元素E。比如： ."),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("box")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("nth-child")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("6"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("。\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("E")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("nth-last-child")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("-n+3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("，但是n可以从0算起，也就是选倒数第三个第二个第一个共三个元素。\n注意，实际选择时，盒子的编号是从1开始算起，不是0。\n\n把E元素的兄弟元素按照顺序从1到N排起来，然后如果第n个的类型是E，那么就选中了，如果类型不一致，那么就没选中。\n因此，实际会用在列表中、表格中，这样的兄弟元素都一致的情况下。\n")])])]),s("h3",{attrs:{id:"first-of-type"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#first-of-type"}},[t._v("#")]),t._v(" first-of-type")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v("E")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("first-of-type \t\t匹配同类型中的第一个同级兄弟元素E。\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("E")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("last-of-type \t\t\t匹配同类型中的最后一个同级兄弟元素E。\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("E")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("nth-of-type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \t\t匹配同类型中的第n个同级兄弟元素E。\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("E")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("nth-last-of-type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \t匹配同类型中的倒数第n个同级兄弟元素E。\n\n既然上面这几个选择器带有type，我们可以这样理解：先在同级里找到所有的E类型，然后根据 n 进行匹配。\n这个和上面的第一部分的选择原理是不一样的。\n")])])]),s("h3",{attrs:{id:"普通同胞结合符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#普通同胞结合符"}},[t._v("#")]),t._v(" 普通同胞结合符  ~")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p~p")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 选择出现在p元素后的兄弟p元素，不需直接相邻。只要满足关系都选上。 */")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"相邻同胞结合符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#相邻同胞结合符"}},[t._v("#")]),t._v(" 相邻同胞结合符  +")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p+p")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 选择直接出现在p元素后的兄弟p元素。只要满足关系都选上。 */")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"伪类选择器-单冒号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#伪类选择器-单冒号"}},[t._v("#")]),t._v(" 伪类选择器  :单冒号")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v("静态伪类：只能用于超链接的样式")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("link\t\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("链接点击之前")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("visited\t链接点击之后\n")])])]),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v("动态伪类：所有标签都适用的样式")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("hover \t\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("悬停，鼠标放到标签上时")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("focus \t\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("某个标签获得焦点时")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("active \t鼠标点击标签，但是还没有松手时\n")])])]),s("h3",{attrs:{id:"超链接-a-标签的伪类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#超链接-a-标签的伪类"}},[t._v("#")]),t._v(" 超链接 < a > 标签的伪类")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("link "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("、a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("visited "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("、a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("hover "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("、a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("active\n\n四个必须按照顺序先后来写，否则会失效。LV HA。记忆梗是：LV哈。\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("link、a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("visited，要么同时都写，要么同时都不写，不能只写一个。后面两个a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("hover "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("、a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("active可以根据是否需要再写。#### "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("取反")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("not\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(".a-div:not(.notme){\n\t/* 给有a-div类的元素中，选择没有notme类的元素 */\n}\n")])])]),s("h3",{attrs:{id:"多个伪类的交集"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多个伪类的交集"}},[t._v("#")]),t._v(" 多个伪类的交集")]),t._v(" "),s("p",[t._v("情景如下：每行三个，不知道总数多少，要选出最后一行里的元素（不管最后一行多少）")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Item:nth-child(3n+1):nth-last-child(-n+3)~.Item {\n}\n:nth-child(3n+1)，选的是第(3n+1)个元素，也就是第一列的元素（n从0开始）；\n:nth-last-child(-n+3)，选的是所有的倒数三个元素；\n两个紧挨，就是交集，选择的就是最后一行的第一个元素。\n然后~.Item，选的就是排在他后面的同级元素。就是最后一行的所有元素。\n")])])]),s("h2",{attrs:{id:"伪元素选择器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#伪元素选择器"}},[t._v("#")]),t._v(" 伪元素选择器")]),t._v(" "),s("p",[t._v("E::before 设置在 元素E 前面（依据对象树的逻辑结构）的内容，配合content属性一起使用。")]),t._v(" "),s("p",[t._v("E::after 设置在 元素E 后面（依据对象树的逻辑结构）的内容，配合content属性一起使用。")]),t._v(" "),s("p",[t._v("content属性必须要有，用来添加文字或图片；如果没有要添加的文字，可以设置成空字符串。")]),t._v(" "),s("p",[t._v("::before 和::after 是通过 css 模拟出的html标签的效果。通过CSS给特定元素的前后增加新的元素标签，可以显示在文档模拟树里面的那种，默认是行内元素；可以理解为用CSS手段，在文档树上添加了新的span节点。")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v('span::after{\n  content:"，永不止步";\n  color:yellowgreen;\n}\n'),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("生命壹号"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 效果是：生命壹号，永不止步--\x3e")]),t._v("\n")])])]),s("h3",{attrs:{id:"选择第一行、第一个字母"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#选择第一行、第一个字母"}},[t._v("#")]),t._v(" 选择第一行、第一个字母")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("E::first-line")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 选择元素的第一行，是实际页面呈现出的第一行。 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("E::first-letter")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 选择元素的第一个字母 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"鼠标悬浮父元素时-子元素发生变化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#鼠标悬浮父元素时-子元素发生变化"}},[t._v("#")]),t._v(" 鼠标悬浮父元素时，子元素发生变化")]),t._v(" "),s("p",[t._v("父元素的悬浮状态下的后代子元素")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(".project-link:hover .code {\n  color: #ff7f50;\n  /*project-link父元素悬浮时，子元素code设置颜色*/\n}\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);