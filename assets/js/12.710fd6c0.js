(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{450:function(t,a,e){t.exports=e.p+"assets/img/attributeManagement.d31a7321.png"},451:function(t,a,e){t.exports=e.p+"assets/img/attrMan-addAttrValue.a858e8ae.png"},452:function(t,a,e){t.exports=e.p+"assets/img/childSelect.c7b62f9b.png"},515:function(t,a,e){"use strict";e.r(a);var r=e(2),s=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"静态组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#静态组件"}},[t._v("#")]),t._v(" 静态组件")]),t._v(" "),a("img",{attrs:{src:e(450)}}),t._v(" "),a("img",{attrs:{src:e(451)}}),t._v(" "),a("h3",{attrs:{id:"el-card-卡片组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#el-card-卡片组件"}},[t._v("#")]),t._v(" el-card 卡片组件")]),t._v(" "),a("p",[t._v("作为一个占据空间的外侧容器使用。可以理解为有一定样式的div。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<el-card>\n\t...\n</el-card>      \n")])])]),a("h3",{attrs:{id:"el-select-下拉选择组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#el-select-下拉选择组件"}},[t._v("#")]),t._v(" el-select 下拉选择组件")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<el-select v-model="cForm.category1Id"\n           @change="handler1"\n           placeholder="请选择" :disabled="isCategoryDisabled" >\n\t<el-option v-for="(c1) in list1" :key="c1.id"\n\t\t\t   :label="c1.name" :value="c1.id" ></el-option>\n</el-select>\n\n// v-model属性用于下拉选择表单元素选中的选项数据与组件data的双向绑定；\n// @change是选择的选项发生变化时的触发函数。\n\n// <el-option>用于选项的展示：list1是要展示为选项的数据，通过v-for循环展示出来；\t\n// label是选项在页面上的展示数据；\tvalue是选项要被<el-select>表单收集的数据。\n')])])]),a("p",[t._v("多个下拉框组合成一个表单的子表单项&&下拉框要给data传递多个属性的组合数据")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('// 多个下拉框组合成一个子表单，作为外面大表单的一个表单项，排在一列。\n// 按照下面的data，每个属性是一个下拉框，属性里的每个属性值是下拉框的选项；每个下拉框选择时通过v-model交给data的数据，是在el-option的value里，合并出的新数据，原本不在attrInfoList里；下拉框选则某项后，会给attrInfoList中的每项新加一个属性，存储刚提交选中的合并数据attrIdAndValueId。\n\n<el-form-item label="平台属性">\n\t<el-form :inline="true" ref="form" label-width="80px">\n\t\t<el-form-item :label="attr.attrName"\n                      v-for="(attr) in attrInfoList"\n                      :key="attr.id">\n            <el-select placeholder="请选择"\n                       v-model="attr.attrIdAndValueId">\n              <el-option :label="attrValue.valueName"\n                         :value="`${attr.id}:${attrValue.id}`"\n                         v-for="(attrValue) in attr.attrValueList"\n                         :key="attrValue.id"></el-option>\n            </el-select>\n\t\t</el-form-item>\n\t</el-form>\n</el-form-item>\n\ndata：\nattrInfoList:[\t\t\t\t\t\t// attrInfoList是属性列表，里面每一项是某个属性的数据，是一个对象\n    {\n        id:\'\',\n        attrName:\'\',\n        attrValueList:[\t\t\t\t// attrValueList是某个属性的属性值列表，里面每一项是某个属性值的数据，是一个对象\n            {\n                id:\'\',\n                valueName:\'\',\n            }\n            ...\n        ]\n    }\n    ...\n]\n')])])]),a("h3",{attrs:{id:"两种标签交替出现-数据输入input与展示span"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#两种标签交替出现-数据输入input与展示span"}},[t._v("#")]),t._v(" 两种标签交替出现 数据输入input与展示span")]),t._v(" "),a("p",[t._v("当页面上是input时，输入完毕挪走鼠标，输入框失去焦点时，切换为span数据展示；")]),t._v(" "),a("p",[t._v("当页面上是span时，点击span，切换为input数据输入。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<el-card>\n      <el-input v-if="test" @blur="change1"></el-input>\n      <span v-else @click="change2" style="display:block;">{{8888}}</span>\n</el-card>\n\ndata(){\n\treturn{\n\t\ttest:true,\n\t}\n}\nmethods:{\n    change1 () {\n        this.test = false;\n    },\n    change2 () {\n        this.test = true;\n    },\n}\n\n')])])]),a("h3",{attrs:{id:"el-popconfirm-气泡确认框"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#el-popconfirm-气泡确认框"}},[t._v("#")]),t._v(" el-popconfirm 气泡确认框")]),t._v(" "),a("p",[t._v("气泡确认框不会出现在页面中央或顶部，而是会紧挨着出现在元素周围。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<el-popconfirm :title="`确认删除${row.valueName}？`"\n               @onConfirm="deleteAttrValue($index)">\n\t<el-button slot="reference">删除</el-button>\n</el-popconfirm>\n\n// :title是确认框里的文本；\t\t@onConfirm是点击确定按钮时的触发函数（官方库里是@confirm，但项目中，此种写法无用）\n// slot="reference" 要放在：触发Popconfirm显示的HTML元素里\n')])])]),a("h2",{attrs:{id:"组件介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件介绍"}},[t._v("#")]),t._v(" 组件介绍")]),t._v(" "),a("p",[t._v("平台内的每个三级分类都有自己的多个属性，每个属性又会有多个属性值。比如，三级分类“手机”，就有运行内存，屏幕尺寸等多个属性，而运行内存属性也有多个属性值，比如4GB、8GB。")]),t._v(" "),a("p",[t._v("本组件实现选中某个三级分类后，对其属性及属性值进行新增、修改、删除等操作。")]),t._v(" "),a("h2",{attrs:{id:"进入离开组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进入离开组件"}},[t._v("#")]),t._v(" 进入离开组件")]),t._v(" "),a("p",[t._v("切换页面左侧的侧边栏，实现对路由的切换。")]),t._v(" "),a("p",[t._v("对子组件CategorySelect绑定了一个自定义事件getCategoryId，向其传递了一个数据isCategoryDisabled。")]),t._v(" "),a("h2",{attrs:{id:"子组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#子组件"}},[t._v("#")]),t._v(" 子组件")]),t._v(" "),a("p",[t._v("CategorySelect\t平台商品三级分类选择组件，也是一个全局组件。")]),t._v(" "),a("h2",{attrs:{id:"数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据"}},[t._v("#")]),t._v(" 数据")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("名称")]),t._v(" "),a("th",[t._v("数据类型")]),t._v(" "),a("th",[t._v("所属")]),t._v(" "),a("th",[t._v("数据介绍")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("category1Id")]),t._v(" "),a("td",[t._v("string")]),t._v(" "),a("td",[t._v("data")]),t._v(" "),a("td",[t._v("CategorySelect组件传递来的所选中一级分类的id")])]),t._v(" "),a("tr",[a("td",[t._v("category2Id")]),t._v(" "),a("td",[t._v("string")]),t._v(" "),a("td",[t._v("data")]),t._v(" "),a("td",[t._v("CategorySelect组件传递来的所选中二级分类的id")])]),t._v(" "),a("tr",[a("td",[t._v("category3Id")]),t._v(" "),a("td",[t._v("string")]),t._v(" "),a("td",[t._v("data")]),t._v(" "),a("td",[t._v("CategorySelect组件传递来的所选中三级分类的id")])]),t._v(" "),a("tr",[a("td",[t._v("attrList")]),t._v(" "),a("td",[t._v("Array")]),t._v(" "),a("td",[t._v("data")]),t._v(" "),a("td",[t._v("当前三级分类的所有属性及其属性值的数据")])]),t._v(" "),a("tr",[a("td",[t._v("isShowTable")]),t._v(" "),a("td",[t._v("Boolean")]),t._v(" "),a("td",[t._v("data")]),t._v(" "),a("td",[t._v("属性展示/属性编辑的切换")])]),t._v(" "),a("tr",[a("td",[t._v("attrInfo")]),t._v(" "),a("td",[t._v("Object")]),t._v(" "),a("td",[t._v("data")]),t._v(" "),a("td",[t._v("当前处于编辑状态的属性数据")])])])]),t._v(" "),a("h2",{attrs:{id:"api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[t._v("#")]),t._v(" API")]),t._v(" "),a("p",[t._v("1、获取分类属性及属性值")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('路径：/admin/product/attrInfoList/{categort1Id}/{categort2Id}/{categort3Id}\t请求方式：get\t参数：categort1Id,categort2Id,categort3Id选中的一二三级分类的id\nexport const reqAttrList = (categort1Id, categort2Id, categort3Id) =>\n\trequest({url: `/admin/product/attrInfoList/${categort1Id}/${categort2Id}/${categort3Id}`,method: "get" });\n')])])]),a("p",[t._v("2、保存分类属性属性值")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('路径：/admin/product/saveAttrInfo\t\t请求方式：post  \t参数：data\nexport const reqAddOrUpdateAttr = (data) =>\n\trequest({ url: `/admin/product/saveAttrInfo`, method: "post", data });\n\n// 参数data：\n{\n    attrName: "",\n    attrValueList: [\t\t\t\t// 属性中的属性值，因为一个属性可有多个属性值，所以数据类型是数组\n        {\n            attrId: 0,\t\t\t\t// 属性值所属的属性的id\n            valueName:"",\t\t\t// 属性值\n        }\n\t],\n\tcategoryId: 0,\t\t\t\t\t// 属性所属的三级分类的id\n\tcategoryLevel:3,\t\t\t\t\n}\n\n// 不论是新增还是修改，data:attrInfo里保存的一直都是目前正在操作的属性及属性值数据，传给服务器的也都是这个处于编辑状态的数据。\n')])])]),a("h2",{attrs:{id:"methods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#methods"}},[t._v("#")]),t._v(" methods")]),t._v(" "),a("p",[t._v("1、getCategoryId (cForm)\t 绑定给CategorySelect组件的自定义事件的回调函数")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1、参数：cForm CategorySelect组件中选中的一二三级商品分类的id\n\n2、函数内容：\n2.1、当CategorySelect组件触发自定义事件时，本组件的回调函数被执行，本组件获取到自定义事件执行时时传过来的参数，将其保存到组件data中。\n2.2、调用getAttrList()，从服务器获取当前选中的三级分类的所有属性及属性值\n")])])]),a("p",[t._v("2、getAttrList()\t获取当前三级分类的属性及属性值")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1、参数：无\n\n2、函数内容：\n2.1、调用API-获取分类属性及属性值，等待服务器返回结果；如果返回结果成功，将返回的数据保存到data:attrList中；\n2.2、失败则提示失败原因。\n")])])]),a("p",[t._v("3、addAttr()\t给分类添加新属性")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1、参数：无\n\n2、函数内容：\n2.1、将属性显示切换为属性编辑；\n2.2、将data:attrInfo置空，等待用户为其添加数据。\n")])])]),a("p",[t._v("4、updateAttr(row)\t修改分类的某个属性")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1、参数：row 待修改的属性的相关数据\n\n2、函数内容：\n2.1、将属性显示切换为属性编辑；\n2.2、将row深拷贝给data:attrInfo；\n2.3、为attrInfo.attrValueList每个属性值都添加一个isEdit属性，便于确定用户要修改的属性值；\n")])])]),a("p",[t._v("5、addAttrValue()\t为属性添加属性值")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1、参数：无\n\n2、函数内容：\n2.1、给attrInfo.attrValueList属性值列表，新增一条默认的属性值数据；\n2.2、获取到刚才新增的属性值数据的页面DOM元素，将其获得焦点。\n")])])]),a("p",[t._v("6、deleteAttrValue(index)\t为属性删除属性值")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1、参数：index 待删除的属性值在属性值列表里的顺序索引\n\n2、函数内容：\n2.1、调用数组splice方法，根据索引进行删除。\n")])])]),a("p",[t._v("7、spanFocus (row, index)\t将属性值展示切换为属性值输入")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1、参数：row 待修改的属性值相关数据；\tindex 待修改的属性值在属性值列表里的顺序索引\n\n2、函数内容：\n2.1、将当前修改的属性值数据里的isEdit属性变为true；页面DOM会由span切换为input；\n2.2、获取到正在修改的属性值数据的页面DOM元素，将其获得焦点。\n")])])]),a("p",[t._v("8、inputBlur (row)\t将属性值输入切换为属性值展示")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1、参数：row 待修改的属性值相关数据；\t\n\n2、函数内容：\n2.1、对用户输入的新的属性值数据进行验证；验证不通过则进行提示；\n2.2、验证通过，则将当前修改的属性值数据里的isEdit属性变为false；页面DOM会由span切换为input；\n")])])]),a("p",[t._v("9、saveAttrValueList ()\t保存用户对属性属性值的新增/修改/删除操作")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1、参数：无\n\n2、函数内容：\n2.1、对data:attrInfo进行处理，去掉前面新加的isEdit属性（方便编写代码，但是服务器不需要该数据）；\n2.2、调用API-保存分类属性属性值，等待服务器返回结果；如果返回结果成功，则弹出消息提示，切换回属性展示页面，调用getAttrList方法，从服务器获取更新后的属性数据；\n2.3、如果返回结果失败，则提示失败原因；\n\n// 前面所有的对于属性属性值的新增/修改/删除操作，全部都是对data:attrInfo的操作，所以最终将data:attrInfo这个保存最终编辑结果的数据传递给服务器即可；\n")])])]),a("h2",{attrs:{id:"功能点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#功能点"}},[t._v("#")]),t._v(" 功能点")]),t._v(" "),a("p",[t._v("1、属性及属性值数据动态展示")]),t._v(" "),a("p",[t._v("子组件里选择好三级分类数据，触发自定义事件，将数据传递过来；之后本组件，调用获取分类属性及属性值的API，向服务器发送请求；服务器返回成功则将返回的数据保存到组件data中；页面在展示时，使用相应的属性即可。")]),t._v(" "),a("p",[t._v("2、属性、属性值的添加/修改/删除")]),t._v(" "),a("p",[t._v("用户点击添加/修改属性按钮，属性展示区域切换为属性编辑区域；初始化记录用户操作属性的数据data:attrInfo；把用户的每步操作对应的数据变动，都记录在数据data:attrInfo中；（包括新增属性名、新增属性值、修改已有的属性值、删除已有的属性值）。")]),t._v(" "),a("p",[t._v("其间的数据操作还包括属性值的input输入和span展示的变动，输入文本的检验，变动数据期间的按钮限制等。")]),t._v(" "),a("p",[t._v("3、保存对属性、属性值的编辑")]),t._v(" "),a("p",[t._v("用户点击保存，调用保存属性、属性值数据的API，向服务器发送请求；服务器返回成功则弹出消息框提示，切换回属性展示页面。")]),t._v(" "),a("h2",{attrs:{id:"子组件-categoryselect"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#子组件-categoryselect"}},[t._v("#")]),t._v(" 子组件 CategorySelect")]),t._v(" "),a("p",[a("img",{attrs:{src:e(452),alt:""}})]),t._v(" "),a("h3",{attrs:{id:"组件介绍-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件介绍-2"}},[t._v("#")]),t._v(" 组件介绍")]),t._v(" "),a("p",[t._v("平台内的商品分类，总共划分为三级。比如，一级分类有电子产品、服装；服装的一级分类下又有男装、女装等二级分类；男装的二级分类下又有男士上衣、男士裤子等等三级分类。")]),t._v(" "),a("p",[t._v("本组件就是通过三个下拉选择框，让用户一级一级地选择出某个三级分类；把选择好的三层分类的每层分类的id包装成一个对象，传递给需要的组件。")]),t._v(" "),a("h3",{attrs:{id:"进入-离开组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进入-离开组件"}},[t._v("#")]),t._v(" 进入/离开组件")]),t._v(" "),a("p",[t._v("全局组件，在Attrs组件中作为子组件使用；")]),t._v(" "),a("p",[t._v("参数：父组件Attrs添加的自定义事件getCategoryId（传出本组件内选择的三级分类的id）、及父组件传入的数据isCategoryDisabled")]),t._v(" "),a("h3",{attrs:{id:"数据-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据-2"}},[t._v("#")]),t._v(" 数据")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("名称")]),t._v(" "),a("th",[t._v("数据类型")]),t._v(" "),a("th",[t._v("所属")]),t._v(" "),a("th",[t._v("数据介绍")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("list1")]),t._v(" "),a("td",[t._v("Array")]),t._v(" "),a("td",[t._v("data")]),t._v(" "),a("td",[t._v("平台商品的所有一级分类数据")])]),t._v(" "),a("tr",[a("td",[t._v("list2")]),t._v(" "),a("td",[t._v("Array")]),t._v(" "),a("td",[t._v("data")]),t._v(" "),a("td",[t._v("所选择的一级分类下的所有二级分类数据")])]),t._v(" "),a("tr",[a("td",[t._v("list3")]),t._v(" "),a("td",[t._v("Array")]),t._v(" "),a("td",[t._v("data")]),t._v(" "),a("td",[t._v("所选择的二级分类下的所有三级分类数据")])]),t._v(" "),a("tr",[a("td",[t._v("cForm")]),t._v(" "),a("td",[t._v("Object")]),t._v(" "),a("td",[t._v("data")]),t._v(" "),a("td",[t._v("用户选择的一/二/三级分类的id数据")])]),t._v(" "),a("tr",[a("td",[t._v("isCategoryDisabled")]),t._v(" "),a("td",[t._v("Boolean")]),t._v(" "),a("td",[t._v("props")]),t._v(" "),a("td",[t._v("外部组件控制本组件内三个下拉框的禁用与否的数据")])])])]),t._v(" "),a("h3",{attrs:{id:"生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[t._v("#")]),t._v(" 生命周期")]),t._v(" "),a("p",[t._v("1、mounted ()")]),t._v(" "),a("p",[t._v("调用getCategoryList1方法；组件向服务器发送”获取一级商品分类“的网络请求，如果服务器返回的result正常，则将返回的数据保存到组件的data中，以供后续使用。")]),t._v(" "),a("h3",{attrs:{id:"api-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-2"}},[t._v("#")]),t._v(" API")]),t._v(" "),a("p",[t._v("1、获取一级商品分类")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('路径：/admin/product/getCategory1\t\t请求方式：get\t参数：无\nexport const reqGetCategory1List = () =>\n\trequest({ url: `/admin/product/getCategory1`, method: "get" });\n')])])]),a("p",[t._v("2、获取二级商品分类")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('路径：/admin/product/getCategory2/{categort1Id}\t请求方式：get\t参数：categort1Id一级分类的id\nexport const reqGetCategory2List = (category1Id) =>\n\trequest({ url: `/admin/product/getCategory2/${category1Id}`, method: "get" });\n')])])]),a("p",[t._v("3、获取三级商品分类")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('路径：/admin/product/getCategory3/{categort2Id}\t请求方式：get\t参数：categort2Id二级分类的id\nexport const reqGetCategory3List = (category2Id) =>\n\trequest({ url: `/admin/product/getCategory3/${category2Id}`, method: "get" });\n')])])]),a("h3",{attrs:{id:"methods-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#methods-2"}},[t._v("#")]),t._v(" methods")]),t._v(" "),a("p",[t._v("1、getCategoryList1\t获取一级商品分类数据")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1、参数：无\n\n2、函数内容：\n2.1、调用API-获取一级商品分类；等待服务器返回结果；如果结果成功，将服务器返回的一级分类列表数据保存到组件data:list1中；\n2.2、失败则提示失败原因；\n")])])]),a("p",[t._v("2、getCategoryList2 / getCategoryList3\t获取二/三级商品分类数据")]),t._v(" "),a("p",[t._v("原理与getCategoryList1一致。调用相应的API，将服务器返回的相应层级的分类列表数据保存到组件data:list2/list3中；")]),t._v(" "),a("p",[t._v("3、handler1\t选中某个一级分类选项")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1、参数：无\n\n2、函数内容：\n2.1、将组件data中关于二级、三级分类的数据全部置空；\n2.2、调用getCategoryList2，获取二级商品分类数据。\n")])])]),a("p",[t._v("4、handler2\t选中某个二级分类选项")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1、参数：无\n\n2、函数内容：\n2.1、将组件data中关于三级分类的数据全部置空；\n2.2、调用getCategoryList3，获取三级商品分类数据。\n")])])]),a("p",[t._v("5、handler3\t选中某个三级分类选项")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1、参数：无\n\n2、函数内容：\n2.1、触发Attrs组件绑定的自定义事件getCategoryId，传递数据data:cForm给Attrs组件。\n")])])]),a("h3",{attrs:{id:"功能点-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#功能点-2"}},[t._v("#")]),t._v(" 功能点")]),t._v(" "),a("p",[t._v("1、选择一二三级商品分类")]),t._v(" "),a("p",[t._v("组件在mounted阶段，调用获取一级分类的API，向服务器发送请求；服务器返回成功则将一级分类列表数据保存到data中；")]),t._v(" "),a("p",[t._v("选中某个一级分类，调用获取相应一级分类下的二级分类的API，向服务器发送请求；服务器返回成功则将二级分类列表数据保存到data中；")]),t._v(" "),a("p",[t._v("选中某个二级分类，调用获取相应二级分类下的三级分类的API，向服务器发送请求；服务器返回成功则将三级分类列表数据保存到data中；")]),t._v(" "),a("p",[t._v("选中某个三级分类，触发Attrs组件绑定的自定义事件getCategoryId，将三个选中的分类id传递给Attrs组件。")])])}),[],!1,null,null,null);a.default=s.exports}}]);