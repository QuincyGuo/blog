(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{425:function(t,s,a){t.exports=a.p+"assets/img/construction.71928bb7.jpg"},426:function(t,s,a){t.exports=a.p+"assets/img/functionPrototype.3c203daf.jpg"},427:function(t,s,a){t.exports=a.p+"assets/img/proto1.fbf3bf5f.jpg"},428:function(t,s,a){t.exports=a.p+"assets/img/proto2.623b8fe0.jpg"},490:function(t,s,a){"use strict";a.r(s);var r=a(2),e=Object(r.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"三大规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三大规则"}},[t._v("#")]),t._v(" 三大规则")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("javascript中一切皆对象，函数也属于对象。\n所有对象都含有__proto__属性，指向其构造函数的原型对象。\n只有函数才有原型对象prototype。\n")])])]),s("h2",{attrs:{id:"构造关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构造关系"}},[t._v("#")]),t._v(" 构造关系")]),t._v(" "),s("p",[s("img",{attrs:{src:a(425),alt:""}})]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("首先，有一个Function构造函数，用它创建各自函数，所有函数（包括构造函数）是Function构造函数的实例。\n黑色箭头代表构造关系。\n")])])]),s("h2",{attrs:{id:"函数拥有原型对象prototype"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数拥有原型对象prototype"}},[t._v("#")]),t._v(" 函数拥有原型对象prototype")]),t._v(" "),s("p",[s("img",{attrs:{src:a(426),alt:""}})]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("只有函数拥有自己的原型对象prototype。\n虚线框表示函数有自己的原型对象prototype\n")])])]),s("h2",{attrs:{id:"实例找原型对象1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例找原型对象1"}},[t._v("#")]),t._v(" 实例找原型对象1")]),t._v(" "),s("p",[s("img",{attrs:{src:a(427),alt:""}})]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("__proto__属性让实例能找到自己的原型对象，指向其构造函数的原型对象，见红色箭头。\n")])])]),s("h2",{attrs:{id:"原型对象找其原型对象2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型对象找其原型对象2"}},[t._v("#")]),t._v(" 原型对象找其原型对象2")]),t._v(" "),s("p",[s("img",{attrs:{src:a(428),alt:""}})]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("所有的原型对象的数据类型都是对象，所以其由Object构造函数构造而来，所以其__proto__指向Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype。\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype的__proto__属性指向"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("，到了尽头。\n")])])]),s("p",[t._v("每个对象拥有一个原型对象，")]),t._v(" "),s("p",[t._v("对象中固有的__proto__属性，指向它构造函数的原型对象\n当试图访问一个对象的属性时，它不仅仅在该对象上搜寻，还会搜寻该对象的原型，以及该对象的原型的原型，依次层层向上搜索，直到找到一个名字匹配的属性或到达原型链的末尾")]),t._v(" "),s("p",[t._v("原型链：对象的原型=>原型的原型=>原型的原型的原型=====>null")]),t._v(" "),s("p",[t._v("作用：实例可以访问其构造函数和构造函数原型对象上的属性、方法。")])])}),[],!1,null,null,null);s.default=e.exports}}]);