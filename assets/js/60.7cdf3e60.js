(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{496:function(n,e,o){"use strict";o.r(e);var t=o(2),r=Object(t.a)({},(function(){var n=this._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("h2",{attrs:{id:"引入及注册"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#引入及注册"}},[this._v("#")]),this._v(" 引入及注册")]),this._v(" "),n("p",[this._v("各种引入注册。")]),this._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v('// 引入Vue、APP\nimport Vue from "vue";\nimport App from "./App.vue";\n\n// 引入路由配置router、Vuex配置store\nimport router from "./router"; \nimport store from "./store"; \n\n// 引入各种插件\n\n// 引入mockjs模拟数据插件\nimport "@/mock/mockServe"; \n\n// 引入注册VueLazyload图片懒加载插件\nimport VueLazyload from "vue-lazyload"; \t\nimport imgLoading from "@/assets/logo.png";\nVue.use(VueLazyload, {\n  loading: imgLoading,\n});\n\n// 引入注册自定义插件pluginA\nimport pluginA from "@/plugins/pluginA"; \t\nVue.use(pluginA, {\n  name: "upper",\n});\n\n// 引入Swiper插件的样式\nimport "swiper/css/swiper.css"; \n\n// 引入element-ui组件库中的messagebox组件，并将messagebox组件挂载到vue原型上\nimport { MessageBox } from "element-ui"; \nVue.prototype.$msgbox = MessageBox;\nVue.prototype.$alert = MessageBox.alert;\n\n// 统一引入所有api接口\nimport * as API from "@/api";\n\n// 引入注册导航列表组件、轮播图组件、分页器组件为全局组件\nimport TypeNav from "./components/TypeNav";\nimport CarouselA from "./components/Carousel";\nimport PaginationA from "./components/Pagination";\nVue.component(TypeNav.name, TypeNav);\nVue.component(CarouselA.name, CarouselA);\nVue.component(PaginationA.name, PaginationA);\n\n\nnew Vue({\n  render: (h) => h(App),\n  router,\n  store,\n  beforeCreate() {\n    Vue.prototype.$bus = this; \t// 安装全局事件总线\n    Vue.prototype.$API = API; \t// 将所有的api挂载在vue原型对象上，以后就不再需要在组件里一个个引入\n  },\n}).$mount("#app");\n')])])])])}),[],!1,null,null,null);e.default=r.exports}}]);