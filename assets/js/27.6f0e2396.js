(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{435:function(t,a,e){t.exports=e.p+"assets/img/shopcart.f49a493b.jpg"},504:function(t,a,e){"use strict";e.r(a);var s=e(2),r=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"组件介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件介绍"}},[t._v("#")]),t._v(" 组件介绍")]),t._v(" "),a("p",[t._v("个人购物车页面。包括去结算、修改商品数量、删除商品等。")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:e(435)}}),t._v(" "),a("h2",{attrs:{id:"进入离开组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进入离开组件"}},[t._v("#")]),t._v(" 进入离开组件")]),t._v(" "),a("p",[t._v("1、由Header组件，路由跳转进入；参数：无")]),t._v(" "),a("p",[t._v("2、由AddCartSuccess路由组件，路由跳转进入；参数：无")]),t._v(" "),a("p",[t._v("3、跳转进入Trade路由组件；参数：无")]),t._v(" "),a("h2",{attrs:{id:"生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[t._v("#")]),t._v(" 生命周期")]),t._v(" "),a("p",[t._v("1、mounted ()\t调用getData方法，调用vuex-actions-cartList：向服务器发送”获取用户购物车数据“的网络请求，如果服务器返回的result正常，则将返回的data保存到state中，以供组件使用。")]),t._v(" "),a("h2",{attrs:{id:"数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据"}},[t._v("#")]),t._v(" 数据")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("名称")]),t._v(" "),a("th",[t._v("数据类型")]),t._v(" "),a("th",[t._v("所属")]),t._v(" "),a("th",[t._v("数据介绍")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("cartList")]),t._v(" "),a("td",[t._v("array")]),t._v(" "),a("td",[t._v("computed")]),t._v(" "),a("td",[t._v("组件仓库state中获取到的服务器返回的购物车相关数据")])]),t._v(" "),a("tr",[a("td",[t._v("cartInfoList")]),t._v(" "),a("td",[t._v("array")]),t._v(" "),a("td",[t._v("computed")]),t._v(" "),a("td",[t._v("从cartList中分解出来的购物车数据")])]),t._v(" "),a("tr",[a("td",[t._v("totalPrice")]),t._v(" "),a("td",[t._v("number")]),t._v(" "),a("td",[t._v("computed")]),t._v(" "),a("td",[t._v("购物车内商品总价")])]),t._v(" "),a("tr",[a("td",[t._v("isAllCheck")]),t._v(" "),a("td",[t._v("boolean")]),t._v(" "),a("td",[t._v("computed")]),t._v(" "),a("td",[t._v("购物车内所有商品是否都被选中")])])])]),t._v(" "),a("h2",{attrs:{id:"api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[t._v("#")]),t._v(" API")]),t._v(" "),a("p",[t._v("1、改变购物车商品数量")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('地址：/api/cart/addToCart/{skuId}/ {skuNum}  请求方式：post    需要带参数skuId, skuNum\nexport const reqAddOrUpdateCart = (skuId, skuNum) =>\n  requests({ url: `/cart/addToCart/${skuId}/${skuNum}`, method: "post" });\n// skuNum的含义是：对购物车内已有数量的增减数量，正数代表对目前数量增加多少，负数代表减少多少  \n')])])]),a("p",[t._v("2、获取购物车相关数据")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('地址：/api/cart/cartList  请求方式：get    参数：无\nexport const reqGetCartList = () => \n  requests({ url: "/cart/cartList ", method: "get" });\n')])])]),a("p",[t._v("3、删除购物车内商品")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('地址：/api/cart/deleteCart/{skuId}   请求方式：DELETE\t需要带参数skuId\nexport const reqDeleteCart = (skuId) =>\n  requests({ url: `/cart/deleteCart/${skuId}`, method: "DELETE" });\n')])])]),a("p",[t._v("4、切换商品选中状态")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('地址：/api/cart/checkCart/{skuId}/{isChecked}   请求方式:get   需要带参数skuId，isChecked(string类型的1/0)\nexport const reqUpdateCartChecked = (skuId, isChecked) =>\n  requests({ url: `/cart/checkCart/${skuId}/${isChecked}`, method: "get" });\n')])])]),a("h2",{attrs:{id:"vuex"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vuex"}},[t._v("#")]),t._v(" vuex")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("vuex-shopcart：\n1、actions\n1.1、getCartList\n调用API-获取购物车相关数据；服务器返回请求成功，则调用mutations-GETCARTLIST\n1.2、deleteCart\n调用API-删除购物车内商品；服务器返回请求成功，则通知组件成功\n1.3、deleteAllCheckedCart  \n通过getters获得所有状态为选中的商品id，然后对每一个都调用deleteCart的actions，然后将所有的请求结果合并进行判断，将最终结果返回给组件\n\n2、mutations\n2.1、GETCARTLIST\n将服务器返回的商品详情数据保存到state的cartList中，以供其他组件调用\n\n3、state\ncartList:[] \t\t\t// 购物车相关数据，数组\n\n4、getters\ncartList\t\t\t\t// 购物车相关数据，简化state数据读取，对象\n")])])]),a("h2",{attrs:{id:"methods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#methods"}},[t._v("#")]),t._v(" methods")]),t._v(" "),a("p",[t._v("1、getData()\t向服务器获取个人购物车数据")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1、参数：无\n\n2、函数内容：\n2.1、dispatch触发getCartList；\n")])])]),a("p",[t._v("2、changeNum(type, disNum, cart)\t修改购物车内商品数量")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1、参数：数量修改类型（增、减、改）、数量的变化量（改变后的数量-修改前的数量）、当前被改变数量的商品信息  \n\n2、函数内容：\n2.1、获取修改后的产品数量与原有数量的差值\n2.2、dispatch触发addOrUpdateCart；\n2.3、请求返回成功，组件调用getData()，再次向服务器获取修改后的个人购物车数据的请求，以刷新页面\n")])])]),a("p",[t._v("3、deleteCartOfShop(id)\t删除购物车内某一商品")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1、参数：当前被删除的商品id \n\n2、函数内容：\n2.1、dispatch触发deleteCart；\n2.2、请求返回成功，组件调用getData()，再次向服务器获取修改后的个人购物车数据的请求，以刷新页面\n")])])]),a("p",[t._v("4、deleteAllCheckedCart()\t删除购物车内所有选中的商品")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1、参数：无\n\n2、函数内容：\n2.1、dispatch触发deleteAllCheckedCart；\n2.2、请求返回成功，组件调用getData()，再次向服务器获取修改后的个人购物车数据的请求，以刷新页面\n")])])]),a("h2",{attrs:{id:"功能点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#功能点"}},[t._v("#")]),t._v(" 功能点")]),t._v(" "),a("p",[t._v("1、页面数据动态展示")]),t._v(" "),a("p",[t._v("组件在mounted阶段，调用getData方法；vuex调用获取购物车相关数据的API，向服务器发送请求；服务器返回成功则将返回的data保存到state中；本组件的computed获取vuex-state数据，并保存为计算属性；页面在展示时，使用相应的属性即可。")]),t._v(" "),a("p",[t._v("2、修改购物车内商品数量")]),t._v(" "),a("p",[t._v("用户点击页面按钮，组件计算修改数量的变化值，调用vuex的addOrUpdateCart；vuex调用修改购物车内商品数量的API，向服务器发送请求；服务器返回成功，组件调用getData方法；后面与1一致，向服务器获取修改后的个人购物车数据的请求，以刷新页面。")]),t._v(" "),a("p",[t._v("3、删除某一商品")]),t._v(" "),a("p",[t._v("用户点击删除按钮，组件调用vuex的deleteCart；vuex调用删除购物车内商品的API，向服务器发送请求；服务器返回成功，组件调用getData方法；后面与1一致，向服务器获取修改后的个人购物车数据的请求，以刷新页面。")]),t._v(" "),a("p",[t._v("4、删除所有选中的商品\n用户点击按钮，组件调用vuex的deleteAllCheckedCart；（该函数通过getters获得所有状态为选中的商品id，然后对每一个都调用deleteCart的actions，每一个都向服务器发送一次请求），然后将所有的请求结果合并进行判断，将最终结果返回给组件；成功，则组件调用getData方法；后面与1一致，向服务器获取修改后的个人购物车数据的请求，以刷新页面。")]),t._v(" "),a("p",[t._v("5、修改产品选中状态")]),t._v(" "),a("p",[t._v("6、全选所有商品")])])}),[],!1,null,null,null);a.default=r.exports}}]);